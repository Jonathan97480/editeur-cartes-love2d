@echo off
setlocal enabledelayedexpansion
title Diagnostic syst√®me - √âditeur de cartes Love2D
color 0B
cls

echo ================================================================
echo             DIAGNOSTIC SYST√àME - √âDITEUR LOVE2D
echo ================================================================
echo.

echo üîç V√©rification de l'environnement syst√®me...
echo.

set ERROR_FOUND=0

REM V√©rification du r√©pertoire
echo [1/6] üìÅ V√©rification des fichiers du projet...
if exist "app_final.py" (
    echo     ‚úÖ app_final.py trouv√©
) else (
    echo     ‚ùå app_final.py manquant !
    set ERROR_FOUND=1
)

if exist "data\cartes.db" (
    echo     ‚úÖ Base de donn√©es trouv√©e
) else (
    echo     ‚ùå Base de donn√©es manquante !
    set ERROR_FOUND=1
)

if exist "lib\" (
    echo     ‚úÖ Dossier lib/ trouv√©
) else (
    echo     ‚ùå Dossier lib/ manquant !
    set ERROR_FOUND=1
)

echo.

REM V√©rification de Python
echo [2/6] üêç V√©rification de Python...
where python >nul 2>&1
if %errorlevel%==0 (
    echo     ‚úÖ Python trouv√© dans le PATH
    for /f "tokens=*" %%i in ('python --version 2^>^&1') do set PYTHON_VERSION=%%i
    echo     üìã Version: !PYTHON_VERSION!
) else (
    echo     ‚ùå Python non trouv√© dans le PATH
    set ERROR_FOUND=1
    
    REM Recherche manuelle
    echo     üîç Recherche dans les emplacements standards...
    set PYTHON_MANUAL=0
    for %%P in (
        "C:\Python3\python.exe"
        "C:\Python39\python.exe" 
        "C:\Python310\python.exe"
        "C:\Python311\python.exe"
        "C:\Python312\python.exe"
    ) do (
        if exist %%P (
            echo     ‚ö†Ô∏è  Python trouv√© manuellement: %%P
            set PYTHON_MANUAL=1
        )
    )
    
    if !PYTHON_MANUAL!==0 (
        echo     ‚ùå Aucune installation Python d√©tect√©e
    )
)

echo.

REM V√©rification des modules Python
echo [3/6] üì¶ V√©rification des modules Python...
if %errorlevel%==0 (
    python -c "import tkinter; print('     ‚úÖ tkinter disponible')" 2>nul || echo      ‚ùå tkinter manquant
    python -c "import sqlite3; print('     ‚úÖ sqlite3 disponible')" 2>nul || echo      ‚ùå sqlite3 manquant
    python -c "import sys; print('     üìã Python path:', sys.executable)" 2>nul
) else (
    echo     ‚ö†Ô∏è  Tests ignor√©s (Python non accessible)
)

echo.

REM V√©rification de la configuration syst√®me
echo [4/6] ‚öôÔ∏è Configuration syst√®me...
echo     üíª OS: %OS%
echo     üè∑Ô∏è  Utilisateur: %USERNAME%
echo     üìç R√©pertoire: %CD%
if defined PYTHONPATH (
    echo     üêç PYTHONPATH: %PYTHONPATH%
) else (
    echo     üêç PYTHONPATH: Non d√©fini
)

echo.

REM Test de lancement
echo [5/6] üöÄ Test de lancement...
if exist "app_final.py" (
    if %errorlevel%==0 (
        echo     üîÑ Test d'import des modules...
    python -c "
import sys
sys.path.insert(0, 'lib')
try:
    from config import DB_FILE
    print('     ‚úÖ Configuration charg√©e')
    from database import CardRepo
    print('     ‚úÖ Base de donn√©es accessible')
    from ui_components import CardListApp
    print('     ‚úÖ Interface utilisateur pr√™te')
    print('     üéØ Application pr√™te au lancement')
except ImportError as e:
    print('     ‚ùå Module manquant:', str(e))
except Exception as e:
    print('     ‚ùå Erreur:', str(e))
" 2>nul
    ) else (
        echo     ‚ö†Ô∏è  Test ignor√© (Python non accessible)
    )
) else (
    echo     ‚ùå Impossible de tester (app_final.py manquant)
)

echo.

REM R√©sum√© et recommandations
echo [6/6] üìä R√©sum√© et recommandations...
if defined ERROR_FOUND (
    echo     ‚ö†Ô∏è  PROBL√àMES D√âTECT√âS
    echo.
    echo     üí° SOLUTIONS RECOMMAND√âES:
    echo        1. Installez Python depuis https://python.org
    echo        2. Cochez "Add Python to PATH" lors de l'installation
    echo        3. Red√©marrez votre ordinateur
    echo        4. Utilisez LAUNCH_PORTABLE.bat pour lancer
    echo.
) else (
    echo     ‚úÖ SYST√àME PR√äT
    echo        Vous pouvez lancer l'√©diteur avec START.bat ou LAUNCH_PORTABLE.bat
    echo.
)

echo ================================================================
echo                        DIAGNOSTIC TERMIN√â
echo ================================================================
echo.
echo üìù Pour plus d'aide, consultez INSTALLATION_GUIDE.md
echo.
pause
