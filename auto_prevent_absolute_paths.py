#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üõ°Ô∏è SYST√àME DE PR√âVENTION AUTOMATIQUE DES CHEMINS ABSOLUS
=========================================================

Ce script s'int√®gre au processus de d√©marrage pour:
1. D√©tecter les chemins absolus existants
2. Les corriger automatiquement
3. Pr√©venir les futurs probl√®mes
"""

import sys
import os
from pathlib import Path

# Ajouter le chemin lib
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'lib'))

def run_prevention_system():
    """Lance le syst√®me de pr√©vention complet"""
    
    print('üõ°Ô∏è SYST√àME DE PR√âVENTION DES CHEMINS ABSOLUS')
    print('=' * 55)
    
    # 1. Lancer la v√©rification directe (sans subprocess)
    print('üîç √âtape 1: V√©rification de la base de donn√©es...')
    
    try:
        # Import direct pour √©viter les probl√®mes d'encodage subprocess
        import check_database_paths
        import importlib
        importlib.reload(check_database_paths)
        
        issues = check_database_paths.check_database_paths()
        
        if len(issues) > 0:
            print(f'‚ö†Ô∏è  {len(issues)} probl√®mes d√©tect√©s - Correction en cours...')
            
            # 2. Lancer la correction directe
            import fix_database_paths
            importlib.reload(fix_database_paths)
            
            success = fix_database_paths.fix_database_paths()
            if success:
                print('‚úÖ Chemins corrig√©s automatiquement')
            else:
                print('‚ùå Erreur lors de la correction')
        else:
            print('‚úÖ Base de donn√©es propre')
            
    except Exception as e:
        print(f'‚ùå Erreur lors de la v√©rification: {e}')
    
    # 3. V√©rifier que les corrections de code sont appliqu√©es
    print('\nüîß √âtape 2: V√©rification des corrections de code...')
    
    try:
        # Tester la fonction de validation
        from ui_components import validate_and_convert_path
        
        # Test rapide
        test_result = validate_and_convert_path('C:/test/images/cards/test.png')
        if not test_result.startswith('C:'):
            print('‚úÖ Syst√®me de validation actif')
        else:
            print('‚ùå Syst√®me de validation d√©faillant')
            
    except ImportError:
        print('‚ùå Fonction de validation non trouv√©e - Corrections non appliqu√©es')
        print('   ‚Üí Relancez fix_absolute_path_sources.py')
    except Exception as e:
        print(f'‚ùå Erreur de validation: {e}')
    
    print('\nüéØ Syst√®me de pr√©vention initialis√©')
    print('   Les nouveaux chemins seront automatiquement convertis')

if __name__ == '__main__':
    run_prevention_system()
