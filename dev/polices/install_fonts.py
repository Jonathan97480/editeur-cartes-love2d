#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üé® INSTALLATEUR DE POLICES
=========================

Script pour installer facilement des polices dans l'√©diteur de cartes.
"""

import os
import sys
import shutil
from pathlib import Path
from tkinter import messagebox, filedialog
import tkinter as tk

def install_font_file():
    """Interface graphique pour installer une police."""
    root = tk.Tk()
    root.withdraw()  # Cacher la fen√™tre principale
    
    try:
        # S√©lectionner le fichier de police
        font_file = filedialog.askopenfilename(
            title="S√©lectionner une police √† installer",
            filetypes=[
                ("Polices", "*.ttf *.otf *.TTF *.OTF"),
                ("TrueType Font", "*.ttf *.TTF"),
                ("OpenType Font", "*.otf *.OTF"),
                ("Tous les fichiers", "*.*")
            ]
        )
        
        if not font_file:
            print("‚ùå Aucun fichier s√©lectionn√©")
            return False
        
        # S√©lectionner la cat√©gorie
        category = select_category()
        if not category:
            print("‚ùå Aucune cat√©gorie s√©lectionn√©e")
            return False
        
        # Installer la police
        success = install_font(font_file, category)
        
        if success:
            messagebox.showinfo(
                "‚úÖ Installation r√©ussie",
                f"Police install√©e avec succ√®s !\n\n"
                f"üìÅ Cat√©gorie: {category}\n"
                f"üìÑ Fichier: {Path(font_file).name}\n\n"
                f"üí° Red√©marrez l'application pour utiliser la nouvelle police."
            )
            return True
        else:
            messagebox.showerror("‚ùå Erreur", "Impossible d'installer la police")
            return False
            
    except Exception as e:
        messagebox.showerror("‚ùå Erreur", f"Erreur lors de l'installation:\n{e}")
        return False
    finally:
        root.destroy()

def select_category():
    """Interface pour s√©lectionner la cat√©gorie de police."""
    category_window = tk.Toplevel()
    category_window.title("Cat√©gorie de police")
    category_window.geometry("300x200")
    category_window.resizable(False, False)
    
    # Centrer la fen√™tre
    category_window.transient()
    category_window.grab_set()
    
    selected_category = tk.StringVar()
    
    # Instructions
    tk.Label(category_window, text="üé® Choisissez la cat√©gorie:", 
             font=("Arial", 12, "bold")).pack(pady=10)
    
    # Options de cat√©gorie
    categories = [
        ("titre", "üìù Titre - Polices pour les noms de cartes"),
        ("texte", "üìñ Texte - Polices pour les descriptions"),
        ("special", "‚ú® Sp√©cial - Polices d√©coratives")
    ]
    
    for value, description in categories:
        tk.Radiobutton(
            category_window,
            text=description,
            variable=selected_category,
            value=value,
            anchor="w",
            justify="left"
        ).pack(anchor="w", padx=20, pady=5)
    
    # Boutons
    button_frame = tk.Frame(category_window)
    button_frame.pack(side="bottom", fill="x", padx=10, pady=10)
    
    result = {"category": None}
    
    def ok_clicked():
        result["category"] = selected_category.get()
        category_window.destroy()
    
    def cancel_clicked():
        category_window.destroy()
    
    tk.Button(button_frame, text="‚úÖ OK", command=ok_clicked).pack(side="right", padx=(5, 0))
    tk.Button(button_frame, text="‚ùå Annuler", command=cancel_clicked).pack(side="right")
    
    # S√©lectionner "texte" par d√©faut
    selected_category.set("texte")
    
    # Attendre la fermeture de la fen√™tre
    category_window.wait_window()
    
    return result["category"]

def install_font(font_file_path, category):
    """Installe une police dans la cat√©gorie sp√©cifi√©e."""
    try:
        source_path = Path(font_file_path)
        
        # V√©rifier le fichier source
        if not source_path.exists():
            print(f"‚ùå Fichier inexistant: {font_file_path}")
            return False
        
        if source_path.suffix.lower() not in ['.ttf', '.otf']:
            print(f"‚ùå Format non support√©: {source_path.suffix}")
            return False
        
        # Cr√©er le dossier de destination
        fonts_dir = Path("fonts") / category
        fonts_dir.mkdir(parents=True, exist_ok=True)
        
        # Chemin de destination
        dest_path = fonts_dir / source_path.name
        
        # Copier le fichier
        shutil.copy2(source_path, dest_path)
        
        print(f"‚úÖ Police install√©e: {source_path.name} ‚Üí fonts/{category}/")
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur installation: {e}")
        return False

def download_sample_fonts():
    """T√©l√©charge quelques polices d'exemple (si possible)."""
    print("üåê T√âL√âCHARGEMENT DE POLICES D'EXEMPLE")
    print("=" * 40)
    
    # Note: En production, on pourrait ajouter des t√©l√©chargements automatiques
    # de polices open source depuis GitHub ou Google Fonts
    
    print("üí° Pour ajouter des polices, vous pouvez:")
    print("   1. T√©l√©charger des polices depuis Google Fonts (fonts.google.com)")
    print("   2. Utiliser des polices open source (Liberation Fonts, etc.)")
    print("   3. Copier des polices depuis votre syst√®me")
    print()
    print("üìÅ Polices recommand√©es:")
    print("   ‚Ä¢ Liberation Sans/Serif (open source)")
    print("   ‚Ä¢ Open Sans (Google Fonts)")
    print("   ‚Ä¢ Roboto (Google Fonts)")
    print("   ‚Ä¢ Cinzel (Google Fonts, pour du style fantasy)")
    print("   ‚Ä¢ Nosifer (Google Fonts, pour du style horror)")

def main():
    """Fonction principale."""
    print("üé® INSTALLATEUR DE POLICES")
    print("=" * 30)
    
    if len(sys.argv) > 1:
        # Mode ligne de commande
        font_file = sys.argv[1]
        category = sys.argv[2] if len(sys.argv) > 2 else "texte"
        
        success = install_font(font_file, category)
        if success:
            print(f"‚úÖ Police install√©e avec succ√®s!")
        else:
            print(f"‚ùå √âchec de l'installation")
            sys.exit(1)
    else:
        # Mode interactif
        choice = input("Choisissez une option:\n"
                      "1. Installer une police depuis un fichier\n"
                      "2. Voir les polices recommand√©es\n"
                      "Votre choix (1-2): ")
        
        if choice == "1":
            # V√©rifier si on peut lancer l'interface graphique
            try:
                success = install_font_file()
                if success:
                    print("‚úÖ Installation termin√©e!")
                else:
                    print("‚ùå Installation annul√©e ou √©chou√©e")
            except Exception as e:
                print(f"‚ùå Impossible de lancer l'interface graphique: {e}")
                print("üí° Utilisez: python install_fonts.py chemin/vers/police.ttf [cat√©gorie]")
        
        elif choice == "2":
            download_sample_fonts()
        
        else:
            print("‚ùå Choix invalide")

if __name__ == "__main__":
    main()
