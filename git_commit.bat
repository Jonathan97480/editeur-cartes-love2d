@echo off
REM Script Git am√©lior√© avec environnement Python configur√©
echo ================================
echo COMMIT AVEC ENVIRONNEMENT PYTHON
echo ================================

REM D√©finir le Python correct
set PYTHON_EXE=C:/Users/berou/AppData/Local/NVIDIA/ChatWithRTX/env_nvd_rag/python.exe

REM V√©rifier que Python est disponible
if not exist "%PYTHON_EXE%" (
    echo ERREUR: Python non trouv√© √† %PYTHON_EXE%
    echo Utilisation du Python par d√©faut...
    set PYTHON_EXE=python
)

echo üìç Utilisation de Python: %PYTHON_EXE%
echo.

REM Ajouter tous les fichiers modifi√©s
echo üìù Ajout des fichiers modifi√©s...
git add .

REM V√©rifier le statut
echo üìä Statut du repository:
git status --short

echo.
REM Demander le message de commit
set /p commit_msg="üí¨ Message de commit: "

if "%commit_msg%"=="" (
    echo ‚ùå Message de commit requis
    pause
    exit /b 1
)

REM Faire le commit avec gestion d'erreur
echo.
echo üöÄ Cr√©ation du commit...
git commit -m "%commit_msg%"

if %ERRORLEVEL% EQU 0 (
    echo ‚úÖ Commit cr√©√© avec succ√®s !
    
    REM Lancer les tests post-commit avec le bon Python
    echo.
    echo üß™ Validation post-commit...
    "%PYTHON_EXE%" app_final.py --test
    
    if %ERRORLEVEL% EQU 0 (
        echo ‚úÖ Tous les tests passent !
    ) else (
        echo ‚ö†Ô∏è  Certains tests ont des probl√®mes
    )
) else (
    echo ‚ùå Erreur lors du commit
)

echo.
echo ================================
pause
