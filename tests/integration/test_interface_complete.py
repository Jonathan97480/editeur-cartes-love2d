#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test final : Cr√©ation et affichage carte avec acteur
"""

import tkinter as tk
from tkinter import ttk
import sys
import os

# Ajouter le chemin pour importer les modules
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from lib.database import CardRepo, ensure_db, Card
from lib.ui_components import CardForm, CardList, get_available_actors
from lib.actors import ActorManager
from lib.config import DB_FILE

def test_interface_complete():
    """Test complet de l'interface avec le syst√®me d'acteurs."""
    
    print("üéØ TEST INTERFACE COMPL√àTE AVEC ACTEURS")
    print("=" * 50)
    
    # Initialiser
    ensure_db(DB_FILE)
    repo = CardRepo(DB_FILE)
    
    # Cr√©er la fen√™tre de test
    root = tk.Tk()
    root.title("Test Interface Acteurs - Complet")
    root.geometry("1200x800")
    
    # Notebook pour s√©parer cr√©ation et liste
    notebook = ttk.Notebook(root)
    notebook.pack(fill='both', expand=True, padx=10, pady=10)
    
    # ===== ONGLET CR√âATION =====
    create_frame = ttk.Frame(notebook)
    notebook.add(create_frame, text="Cr√©er/√âditer")
    
    def on_card_saved():
        """Callback appel√© quand une carte est sauvegard√©e."""
        print("‚úÖ Carte sauvegard√©e ! Actualisation de la liste...")
        card_list.refresh()  # Rafra√Æchir la liste
    
    # Formulaire de cr√©ation
    form = CardForm(create_frame, repo, on_card_saved)
    form.pack(fill='both', expand=True, padx=5, pady=5)
    
    # ===== ONGLET LISTE =====
    list_frame = ttk.Frame(notebook)
    notebook.add(list_frame, text="Liste des Cartes")
    
    def on_card_select(card_id):
        """Callback appel√© quand une carte est s√©lectionn√©e."""
        print(f"üìã Carte s√©lectionn√©e : {card_id}")
        card = repo.get(card_id)
        if card:
            form.load_card(card)
            notebook.select(0)  # Basculer vers l'onglet cr√©ation
            print(f"‚úÖ Carte '{card.name}' charg√©e dans le formulaire")
    
    # Liste des cartes
    card_list = CardList(list_frame, repo, on_card_select)
    card_list.pack(fill='both', expand=True, padx=5, pady=5)
    
    # ===== ONGLET INFORMATIONS =====
    info_frame = ttk.Frame(notebook)
    notebook.add(info_frame, text="Informations")
    
    info_text = tk.Text(info_frame, wrap='word', font=('Consolas', 10))
    info_scrollbar = ttk.Scrollbar(info_frame, orient='vertical', command=info_text.yview)
    info_text.config(yscrollcommand=info_scrollbar.set)
    
    info_text.pack(side='left', fill='both', expand=True, padx=(5,0), pady=5)
    info_scrollbar.pack(side='right', fill='y', pady=5)
    
    # Remplir les informations
    info_content = """
üéØ TEST INTERFACE COMPL√àTE AVEC SYST√àME D'ACTEURS

‚úÖ FONCTIONNALIT√âS TEST√âES :
‚Ä¢ S√©lection multiple d'acteurs avec Ctrl+clic
‚Ä¢ Cr√©ation de cartes avec liaisons acteur-carte
‚Ä¢ Affichage des vrais acteurs dans la liste (plus Joueur/IA)
‚Ä¢ Chargement et √©dition de cartes existantes
‚Ä¢ Actualisation automatique apr√®s sauvegarde

üéÆ COMMENT TESTER :
1. Onglet "Cr√©er/√âditer" :
   - S√©lectionnez un ou plusieurs acteurs avec Ctrl+clic
   - Remplissez les informations de la carte
   - Cliquez "Sauvegarder"

2. Onglet "Liste des Cartes" :
   - V√©rifiez que la colonne "Acteurs" affiche les vrais acteurs
   - Double-cliquez sur une carte pour l'√©diter
   - Utilisez les filtres par acteur

3. Test des liaisons :
   - Cr√©ez une carte avec "Barbus"
   - V√©rifiez qu'elle appara√Æt bien li√©e √† "Barbus" dans la liste
   - √âditez la carte et changez l'acteur
   - V√©rifiez la mise √† jour

üîß AM√âLIORATIONS APPORT√âES :
‚Ä¢ Interface : Listbox au lieu de Combobox
‚Ä¢ Base de donn√©es : Liaisons carte-acteur fonctionnelles
‚Ä¢ Affichage : Colonne "Acteurs" au lieu de "C√¥t√©"
‚Ä¢ Filtrage : Par acteur r√©el au lieu de side legacy
‚Ä¢ Messages : Informatifs pour debug

‚ö†Ô∏è SI PROBL√àMES :
- V√©rifiez la console pour les messages de debug
- Les liaisons sont cr√©√©es automatiquement
- L'affichage se met √† jour apr√®s sauvegarde

üéâ STATUT : SYST√àME COMPLET ET FONCTIONNEL !
"""
    
    info_text.insert('1.0', info_content)
    info_text.config(state='disabled')
    
    # Afficher les informations sur les acteurs
    print(f"\nüìã Acteurs disponibles :")
    actors = get_available_actors()
    for i, actor in enumerate(actors, 1):
        print(f"   {i}. {actor}")
    
    print(f"\nüöÄ Interface de test compl√®te lanc√©e !")
    print(f"   Testez la cr√©ation et l'affichage des cartes avec acteurs")
    print(f"   Fermez la fen√™tre pour terminer le test")
    
    # Actualiser la liste initiale
    card_list.refresh()
    
    # Lancer l'interface
    root.mainloop()
    
    print(f"\n‚úÖ Test interface termin√©")

if __name__ == "__main__":
    test_interface_complete()
